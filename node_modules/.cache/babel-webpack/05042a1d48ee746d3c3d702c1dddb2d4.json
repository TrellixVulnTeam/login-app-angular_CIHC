{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet SIGNIN_API = 'http://ec2-18-195-130-123.eu-central-1.compute.amazonaws.com:8080/auth/realms/mixit/protocol/openid-connect/token';\nexport let SigninService = /*#__PURE__*/(() => {\n  class SigninService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n\n    getArgHeadersForPost() {\n      const httpOptionsGet = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n          'Authorization': 'Basic bWl4aXQtd2ViYXBwLTAxOmY5YzY2NGMwLTlhNjEtNDA0OS05NjQ3LTRkZWQzMjZiMjBmZg=='\n        })\n      };\n      return httpOptionsGet;\n    }\n\n    getArgHeadersForGet(reqHeader) {\n      const httpOptionsPost = {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + reqHeader\n        })\n      };\n      return httpOptionsPost;\n    }\n\n    getTokens() {\n      const body = 'grant_type=password&username=firstAngularUser@test.de&password=Test123';\n      this.httpClient.post(`http://ec2-18-195-130-123.eu-central-1.compute.amazonaws.com:8080/auth/realms/mixit/protocol/openid-connect/token`, body, this.getArgHeadersForPost()).subscribe(res => {\n        console.log(JSON.stringify(res).split('\"')[3]);\n        return this.httpClient.get(`http://developia-backend-test.eu-central-1.elasticbeanstalk.com/api/d47015d9-baf6-4b69-8c57-47e2d0f9aef0/dashboard?size=5&page=0`, this.getArgHeadersForGet(JSON.stringify(res).split('\"')[3])).subscribe(getres => {\n          this.getResponse = JSON.parse(JSON.stringify(getres));\n          console.log(this.getResponse);\n          this.cont = JSON.stringify(getres);\n          this.recipeCountType = JSON.stringify(this.getResponse.recipeHeaderCount);\n          this.innovateCountType = JSON.stringify(this.getResponse.innovationCount);\n          this.taskCountType = JSON.stringify(this.getResponse.taskCount);\n          this.recipeHeader = JSON.stringify(this.getResponse.recipeHeaders);\n          this.innovate = JSON.stringify(this.getResponse.innovations);\n          this.task = JSON.stringify(this.getResponse.tasks);\n        });\n      }, error => this.postError = JSON.stringify(error.message));\n    }\n\n  }\n\n  SigninService.ɵfac = function SigninService_Factory(t) {\n    return new (t || SigninService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SigninService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SigninService,\n    factory: SigninService.ɵfac,\n    providedIn: 'root'\n  });\n  return SigninService;\n})();","map":null,"metadata":{},"sourceType":"module"}