{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-bootstrap-md\";\n\nfunction DashboardComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"li\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"li\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"li\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.recipeCountType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.innovateCountType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.taskCountType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.recipeHeader);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.innovate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.task);\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(router, httpClient) {\n      this.router = router;\n      this.httpClient = httpClient;\n      const body = 'grant_type=password&username=firstAngularUser@test.de&password=Test123';\n    }\n\n    getArgHeadersForPost() {\n      const httpOptionsGet = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n          'Authorization': 'Basic bWl4aXQtd2ViYXBwLTAxOmY5YzY2NGMwLTlhNjEtNDA0OS05NjQ3LTRkZWQzMjZiMjBmZg=='\n        })\n      };\n      return httpOptionsGet;\n    }\n\n    getArgHeadersForGet(reqHeader) {\n      const httpOptionsPost = {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + reqHeader\n        })\n      };\n      return httpOptionsPost;\n    }\n\n    getData$() {\n      return this.data$;\n    }\n\n    ngOnInit() {\n      console.log(this.message);\n      const body = 'grant_type=password&username=firstAngularUser@test.de&password=Test123';\n      this.httpClient.post(`http://ec2-18-195-130-123.eu-central-1.compute.amazonaws.com:8080/auth/realms/mixit/protocol/openid-connect/token`, body, this.getArgHeadersForPost()).subscribe(res => {\n        console.log(JSON.stringify(res).split('\"')[3]);\n        return this.httpClient.get(`http://developia-backend-test.eu-central-1.elasticbeanstalk.com/api/d47015d9-baf6-4b69-8c57-47e2d0f9aef0/dashboard?size=5&page=0`, this.getArgHeadersForGet(JSON.stringify(res).split('\"')[3])).subscribe(getres => {\n          this.getResponse = JSON.parse(JSON.stringify(getres));\n          console.log(this.getResponse);\n          this.cont = JSON.stringify(getres);\n          this.recipeCountType = JSON.stringify(this.getResponse.recipeHeaderCount);\n          this.innovateCountType = JSON.stringify(this.getResponse.innovationCount);\n          this.taskCountType = JSON.stringify(this.getResponse.taskCount);\n          this.recipeHeader = JSON.stringify(this.getResponse.recipeHeaders);\n          this.innovate = JSON.stringify(this.getResponse.innovations);\n          this.task = JSON.stringify(this.getResponse.tasks);\n        });\n      }, error => this.postError = JSON.stringify(error.message));\n    }\n\n    onLogOut() {\n      event.preventDefault();\n      this.router.navigate(['']); // window.location.reload();\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    inputs: {\n      message: \"message\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"error\"], [4, \"ngIf\"], [1, \"logout-container\"], [\"mdbBtn\", \"\", \"color\", \"default\", \"id\", \"logout\", \"mdbWavesEffect\", \"\", 1, \"m-0\", \"px-3\", \"py-2\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Login Successful. Welcome to the Dashboard. The response of the Http call is:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DashboardComponent_ul_4_Template, 13, 6, \"ul\", 1);\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_6_listener() {\n          return ctx.onLogOut();\n        });\n        i0.ɵɵtext(7, \"Logout\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.postError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cont);\n      }\n    },\n    directives: [i3.NgIf, i4.MdbBtnDirective, i4.WavesDirective],\n    styles: [\"h3[_ngcontent-%COMP%]{color:green;margin:0 100px;font-size:55px}#logout[_ngcontent-%COMP%]{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px rgba(0,0,0,.141),0 1px 5px rgba(0,0,0,.122);background-color:#f44336;color:#fff;border:none;margin-left:100px!important;min-width:100px;line-height:36px;padding:0 16px}li[_ngcontent-%COMP%]{padding:15px}h2[_ngcontent-%COMP%]{padding:20px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}